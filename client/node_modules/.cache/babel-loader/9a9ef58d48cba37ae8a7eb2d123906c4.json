{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\druba\\\\Side-Projects\\\\DruciferPortfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\druba\\\\Side-Projects\\\\DruciferPortfolio\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar express = require('express');\n\nvar app = express();\nvar port = 3000;\n\nvar bodyParser = require(\"body-parser\");\n\nvar fs = require('fs');\n\nvar nodemailer = require('nodemailer');\n\nvar _require = require('util'),\n    promisify = _require.promisify;\n\nvar readFile = promisify(fs.readFile);\napp.use(bodyParser.json()); // to support JSON-encoded bodies\n\napp.use(bodyParser.urlencoded({\n  // to support URL-encoded bodies\n  extended: true\n}));\napp.get('/email', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(req.body); //send an e-mail to jim rubenstein\n\n            console.log('insdie the get/');\n            _context.next = 4;\n            return sendmail();\n\n          case 4:\n            res.sendFile(__dirname + \"/email.html\", function (err) {\n              if (err) {\n                console.log(err);\n              } else {\n                console.log('Sent:', __dirname + \"/demofile1.html\");\n              }\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\nfunction sendmail() {\n  return _sendmail.apply(this, arguments);\n}\n\nfunction _sendmail() {\n  _sendmail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var transporter, mailOptions;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            transporter = nodemailer.createTransport({\n              service: 'gmail',\n              auth: {\n                user: 'davidfarley7171@gmail.com',\n                pass: 'veileezznybcljte'\n              }\n            });\n            _context2.next = 3;\n            return readFile('./email.html', 'utf8');\n\n          case 3:\n            _context2.t0 = _context2.sent;\n            _context2.t1 = {\n              path: './yarn.lock'\n            };\n            mailOptions = {\n              from: 'davidfarley7171@gmail.com',\n              to: 'davidfarley7171@gmail.com',\n              subject: 'Sending Email using Node.js',\n              html: _context2.t0,\n              attachments: _context2.t1\n            };\n            transporter.sendMail(mailOptions, function (error, info) {\n              if (error) {\n                console.log(error);\n              } else {\n                console.log('Email sent: ' + info.response);\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _sendmail.apply(this, arguments);\n}\n\napp.post('/', function (req, res) {\n  console.log(req.body);\n  res.send('Got a POST request');\n});\napp.listen(port, function () {\n  return console.log(\"Example app listening on port \".concat(port, \"!\"));\n});\nAa;","map":{"version":3,"sources":["C:/Users/druba/Side-Projects/DruciferPortfolio/client/src/components/nodemailer/NodeMailer.js"],"names":["express","require","app","port","bodyParser","fs","nodemailer","promisify","readFile","use","json","urlencoded","extended","get","req","res","console","log","body","sendmail","sendFile","__dirname","err","transporter","createTransport","service","auth","user","pass","path","mailOptions","from","to","subject","html","attachments","sendMail","error","info","response","post","send","listen","Aa"],"mappings":"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","sourcesContent":["const express = require('express')\r\nconst app = express()\r\nconst port = 3000\r\nconst bodyParser = require(\"body-parser\")\r\nvar fs = require('fs');\r\nvar nodemailer = require('nodemailer');\r\nconst { promisify } = require('util');\r\nconst readFile = promisify(fs.readFile);\r\napp.use(bodyParser.json());       // to support JSON-encoded bodies\r\napp.use(bodyParser.urlencoded({     // to support URL-encoded bodies\r\n    extended: true\r\n}));\r\napp.get('/email', async (req, res) => {\r\n    console.log(req.body)\r\n    //send an e-mail to jim rubenstein\r\n    console.log('insdie the get/')\r\n    await sendmail();\r\n    res.sendFile(__dirname + \"/email.html\", function (err) {\r\n        if (err) {\r\n            console.log(err)\r\n        } else {\r\n            console.log('Sent:', __dirname + \"/demofile1.html\")\r\n        }\r\n    })\r\n})\r\nasync function sendmail() {\r\n    var transporter = nodemailer.createTransport({\r\n        service: 'gmail',\r\n        auth: {\r\n            user: 'davidfarley7171@gmail.com',\r\n            pass: 'veileezznybcljte'\r\n        }\r\n    });\r\n    var mailOptions = {\r\n        from: 'davidfarley7171@gmail.com',\r\n        to: 'davidfarley7171@gmail.com',\r\n        subject: 'Sending Email using Node.js',\r\n        html: await readFile('./email.html', 'utf8'),\r\n        attachments:{\r\n            path: './yarn.lock'\r\n        }\r\n    };\r\n    transporter.sendMail(mailOptions, function (error, info) {\r\n        if (error) {\r\n            console.log(error);\r\n        } else {\r\n            console.log('Email sent: ' + info.response);\r\n        }\r\n    });\r\n}\r\napp.post('/', function (req, res) {\r\n    console.log(req.body)\r\n    res.send('Got a POST request')\r\n})\r\napp.listen(port, () => console.log(`Example app listening on port ${port}!`))\r\nAa\r\n\r\n"]},"metadata":{},"sourceType":"module"}